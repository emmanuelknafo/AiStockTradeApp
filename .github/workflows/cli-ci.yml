name: CLI CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - "AiStockTradeApp.Cli/**"
      - ".github/workflows/cli-ci.yml"
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "dev"
        type: choice
        options: [dev, prod]
      instanceNumber:
        description: "Instance number for resource differentiation"
        required: true
        default: "002"
        type: string
      seed:
        description: "Run seeding (import listed stocks) after deploy"
        required: false
        type: boolean
        default: true
      seedCsv:
        description: "CSV path to import (relative to repo)"
        required: false
        default: "data/nasdaq.com/nasdaq_screener_1755436177903.csv"
        type: string

env:
  DOTNET_VERSION: "9.0.x"
  AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
  AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}

jobs:
  test-cli:
    runs-on: [self-hosted, linux, x64]
    env:
      USE_INMEMORY_DB: "true"
    name: Test CLI and Solution (fast)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore & Build CLI
        run: |
          dotnet restore AiStockTradeApp.Cli/AiStockTradeApp.Cli.csproj
          dotnet build AiStockTradeApp.Cli/AiStockTradeApp.Cli.csproj -c Release --no-restore

      - name: CLI smoke test (--help)
        run: |
          dotnet run --project AiStockTradeApp.Cli/AiStockTradeApp.Cli.csproj -- --help

      - name: Restore solution
        run: dotnet restore AiStockTradeApp.sln

      - name: Build unit tests
        run: |
          dotnet build AiStockTradeApp.Tests/AiStockTradeApp.Tests.csproj \
            -c Release --no-restore

      - name: Run unit tests (unit only)
        run: |
          dotnet test AiStockTradeApp.Tests/AiStockTradeApp.Tests.csproj \
            --no-build -c Release -v normal

  smoke-dev:
    runs-on: [self-hosted, linux, x64]
    needs: test-cli
    if: |
      github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main' ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev')
    name: Smoke test Development API
    steps:
      - name: Smoke check /health (dev)
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            INSTANCE_NUM='${{ github.event.inputs.instanceNumber }}'
          else
            INSTANCE_NUM='002'
          fi
          API_BASE="https://api-aistock-dev-${INSTANCE_NUM}.azurewebsites.net"
          echo "Pinging $API_BASE/health"
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$API_BASE/health" || true)
          echo "Status: $STATUS"
          if [ "$STATUS" -ge 200 ] && [ "$STATUS" -lt 400 ]; then
            echo "Dev API healthy"
          else
            echo "Dev API health check failed with status $STATUS"; exit 1
          fi

  smoke-prod:
    runs-on: [self-hosted, linux, x64]
    needs: [test-cli, smoke-dev]
    if: |
      github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'prod')
    name: Smoke test Production API
    steps:
      - name: Smoke check /health (prod)
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            INSTANCE_NUM='${{ github.event.inputs.instanceNumber }}'
          else
            INSTANCE_NUM='002'
          fi
          API_BASE="https://api-aistock-prod-${INSTANCE_NUM}.azurewebsites.net"
          echo "Pinging $API_BASE/health"
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$API_BASE/health" || true)
          echo "Status: $STATUS"
          if [ "$STATUS" -ge 200 ] && [ "$STATUS" -lt 400 ]; then
            echo "Prod API healthy"
          else
            echo "Prod API health check failed with status $STATUS"; exit 1
          fi

  seed-dev-dispatch:
    runs-on: [self-hosted, linux, x64]
    needs: smoke-dev
    if: github.event_name == 'workflow_dispatch' && fromJSON(github.event.inputs.seed) && github.event.inputs.environment == 'dev'
    name: Seed listed stocks (dev)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Import CSV to API (dev)
        env:
          INSTANCE_NUM: ${{ github.event.inputs.instanceNumber }}
          CSV_PATH: ${{ github.event.inputs.seedCsv }}
        run: |
          API_BASE="https://api-aistock-dev-${INSTANCE_NUM}.azurewebsites.net"
          FILE_PATH="${CSV_PATH:-data/nasdaq.com/nasdaq_screener_1755436177903.csv}"
          echo "API: $API_BASE"
          echo "CSV: $FILE_PATH"
          test -f "$FILE_PATH" || { echo "CSV file not found: $FILE_PATH"; exit 1; }
          dotnet run --project AiStockTradeApp.Cli/AiStockTradeApp.Cli.csproj -- import-listed --file "$FILE_PATH" --api "$API_BASE"

  seed-dev-push:
    runs-on: [self-hosted, linux, x64]
    needs: smoke-dev
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    name: Seed listed stocks (dev, push)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Import CSV to API (dev)
        env:
          INSTANCE_NUM: "002"
          CSV_PATH: "data/nasdaq.com/nasdaq_screener_1755436177903.csv"
        run: |
          API_BASE="https://api-aistock-dev-${INSTANCE_NUM}.azurewebsites.net"
          FILE_PATH="${CSV_PATH}"
          echo "API: $API_BASE"
          echo "CSV: $FILE_PATH"
          test -f "$FILE_PATH" || { echo "CSV file not found: $FILE_PATH"; exit 1; }
          dotnet run --project AiStockTradeApp.Cli/AiStockTradeApp.Cli.csproj -- import-listed --file "$FILE_PATH" --api "$API_BASE"

  seed-prod-dispatch:
    runs-on: [self-hosted, linux, x64]
    needs: smoke-prod
    if: github.event_name == 'workflow_dispatch' && fromJSON(github.event.inputs.seed) && github.event.inputs.environment == 'prod'
    name: Seed listed stocks (prod)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Import CSV to API (prod)
        env:
          INSTANCE_NUM: ${{ github.event.inputs.instanceNumber }}
          CSV_PATH: ${{ github.event.inputs.seedCsv }}
        run: |
          API_BASE="https://api-aistock-prod-${INSTANCE_NUM}.azurewebsites.net"
          FILE_PATH="${CSV_PATH:-data/nasdaq.com/nasdaq_screener_1755436177903.csv}"
          echo "API: $API_BASE"
          echo "CSV: $FILE_PATH"
          test -f "$FILE_PATH" || { echo "CSV file not found: $FILE_PATH"; exit 1; }
          dotnet run --project AiStockTradeApp.Cli/AiStockTradeApp.Cli.csproj -- import-listed --file "$FILE_PATH" --api "$API_BASE"

  seed-prod-push:
    runs-on: [self-hosted, linux, x64]
    needs: smoke-prod
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Seed listed stocks (prod, push)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Import CSV to API (prod)
        env:
          INSTANCE_NUM: "002"
          CSV_PATH: "data/nasdaq.com/nasdaq_screener_1755436177903.csv"
        run: |
          API_BASE="https://api-aistock-prod-${INSTANCE_NUM}.azurewebsites.net"
          FILE_PATH="${CSV_PATH}"
          echo "API: $API_BASE"
          echo "CSV: $FILE_PATH"
          test -f "$FILE_PATH" || { echo "CSV file not found: $FILE_PATH"; exit 1; }
          dotnet run --project AiStockTradeApp.Cli/AiStockTradeApp.Cli.csproj -- import-listed --file "$FILE_PATH" --api "$API_BASE"
