name: Load tests

on:
  workflow_dispatch:
  push:
    branches:
      - '**'            # run only for branch refs, not tags
    tags-ignore:
      - '**'            # ignore all tag pushes (e.g., when creating a release tag)
    paths:
      - 'load-tests/**'
      - '.github/workflows/load-tests.yml'
      - '!.github/workflows/generate-changelog.yml'
  pull_request:
    paths:
      - 'load-tests/**'
      - '.github/workflows/load-tests.yml'
      - '!.github/workflows/generate-changelog.yml'

jobs:
  run-jmeter:
    #runs-on: ubuntu-latest
    runs-on: [self-hosted, linux, x64]
    steps:
      - name: Pre-clean leftover artifacts
        if: always()
        run: |
          set -e
          # Remove previous root-owned artifacts to avoid checkout clean failures
          if command -v sudo >/dev/null 2>&1; then
            sudo rm -rf "${{ github.workspace }}/load-tests/jmeter/report" || true
            sudo rm -f  "${{ github.workspace }}/load-tests/jmeter/results.jtl" || true
          else
            rm -rf "${{ github.workspace }}/load-tests/jmeter/report" || true
            rm -f  "${{ github.workspace }}/load-tests/jmeter/results.jtl" || true
          fi

      - uses: actions/checkout@v4
        with:
          clean: false
      - name: Run JMeter (Docker)
        run: |
          set -e
          echo "Generating JMX from template..."
          sed -e "s|@@THREADS@@|20|g" -e "s|@@RAMP@@|10|g" -e "s|@@LOOP@@|1|g" "${{ github.workspace }}/load-tests/jmeter/test-plan.jmx" > "${{ github.workspace }}/load-tests/jmeter/test-plan.generated.jmx"

          echo "Running JMeter in Docker image: justb4/jmeter:5.5"
          docker --version || true
          # Remove previous results to avoid mixing failures from older runs
          rm -f "${{ github.workspace }}/load-tests/jmeter/results.jtl" || true
          # CSV at /tests/paths.csv drives the endpoints; -Jpath provides optional fallback if CSV missing
          docker run --rm -u "$(id -u):$(id -g)" -v "${{ github.workspace }}/load-tests/jmeter:/tests" -w /tests justb4/jmeter:5.5 \
            -n -t test-plan.generated.jmx -l results.jtl \
            -Jhost=app-aistock-dev-003.azurewebsites.net -Jport=443 -Jprotocol=https -Jpath=/health

      - name: Generate HTML report
        run: |
          set -e
          docker run --rm -u "$(id -u):$(id -g)" -v "${{ github.workspace }}/load-tests/jmeter:/tests" -w /tests justb4/jmeter:5.5 -g results.jtl -o report || true

      - name: Upload JMeter artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-results
          path: |
            load-tests/jmeter/results.jtl
            load-tests/jmeter/report
