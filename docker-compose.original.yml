services:
  AiStockTradeApp:
    image: aistocktradeapp-ui:latest
    build:
      context: .
      dockerfile: AiStockTradeApp/Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Server=sqlserver;Database=StockTraderDb;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true;MultipleActiveResultSets=true"
      USE_INMEMORY_DB: "false"
      # Ensure UI can reach the API from inside the container via service DNS
      StockApi__BaseUrl: "http://AiStockTradeAppApi:8080"
      StockApi__HttpBaseUrl: "http://AiStockTradeAppApi:8080"
    depends_on:
      - sqlserver
    networks:
      - app-network

  AiStockTradeAppApi:
    image: aistocktradeapp-api:latest
    build:
      context: .
      dockerfile: AiStockTradeApp.Api/Dockerfile
    ports:
      - "8082:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=StockTraderDb;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true;MultipleActiveResultSets=true
      - USE_INMEMORY_DB=false
    depends_on:
      - sqlserver
    networks:
      - app-network

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Passw0rd
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - app-network

volumes:
  sqlserver_data:

networks:
  app-network:
    driver: bridge