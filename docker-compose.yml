services:
  aistocktradeapp:
    image: ${DOCKER_REGISTRY-}aistocktradeapp
    build:
      context: .
      dockerfile: AiStockTradeApp/Dockerfile
    ports:
      - "8080:8080" # Expose UI on http://localhost:8080
      # - "8081:8081" # Optionally expose HTTPS
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: "http://+:8080"
      ASPNETCORE_HTTP_PORTS: "8080"
      HttpsRedirection__HttpsPort: "0" # disable HTTPS redirect in container
      # Point UI to the API service inside the compose network
      StockApi__BaseUrl: "http://aistocktradeappapi:8080"
      StockApi__HttpBaseUrl: "http://aistocktradeappapi:8080"
    networks:
      - app-network

  AiStockTradeAppApi:
    image: ${DOCKER_REGISTRY-}aistocktradeapp-api:latest
    build:
      context: .
      dockerfile: AiStockTradeApp.Api/Dockerfile
    ports:
      - "8082:8080" # API available on http://localhost:8082 for external calls
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: "http://+:8080"
      ASPNETCORE_HTTP_PORTS: "8080"
      HttpsRedirection__HttpsPort: "0" # disable HTTPS redirect in container
      ConnectionStrings__DefaultConnection: "Server=sqlserver;Database=StockTraderDb;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true;MultipleActiveResultSets=true"
      USE_INMEMORY_DB: "false"
    depends_on:
      sqlserver:
        condition: service_healthy
    networks:
      app-network:
        aliases:
          - AiStockTradeAppApi
          - aistocktradeappapi

  aistockmcpserver:
    image: ${DOCKER_REGISTRY-}aistocktradeapp-mcp:latest
    build:
      context: .
      dockerfile: AiStockTradeApp.McpServer/Dockerfile
    ports:
      - "5000:5000" # MCP Server available on http://localhost:5000/mcp
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: "http://+:5000"
      ASPNETCORE_HTTP_PORTS: "5000"
      STOCK_API_BASE_URL: "http://aistocktradeappapi:8080"
    depends_on:
      AiStockTradeAppApi:
        condition: service_started
    networks:
      - app-network
    command: ["dotnet", "AiStockTradeApp.McpServer.dll", "--http"]

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "YourStrong@Passw0rd"
      MSSQL_PID: "Express"
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -C -S localhost -U sa -P $${SA_PASSWORD} -Q 'SELECT 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
    networks:
      - app-network

volumes:
  sqlserver_data:

networks:
  app-network:
    driver: bridge
